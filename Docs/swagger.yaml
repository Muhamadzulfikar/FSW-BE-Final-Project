openapi: 3.0.3
info:
  title: Academy  - OpenAPI 3.0
  description: |
    API documentation for the Academy Website, providing endpoints to manage courses, students, and mor
    
    Some useful links:
    - [BackEnd repository](https://github.com/Muhamadzulfikar/FSW-BE-Final-Project)
    - [ERD link](https://dbdiagram.io/d/655ed5293be14957878fc325)
  license:
    name: ISC License
    url: https://www.isc.org/licenses/
  version: 1.0.0
servers:
  - url: http://localhost:8000/v1
tags:
  - name: Root
    description: Root end-point
  - name: Category
    description: Everything about cars management
  - name: Class
    description: Everything about user management
paths:
  /:
    get:
      tags:
        - Root
      summary: Test your ping to the server here
      operationId: testPing
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ping'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Internal_Error'
  /categories:
    get:
      tags:
        - Category
      summary: Find all Category
      description: This end point will serve all list of categories
      operationId: getAllCategories
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Categories'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Internal_Error'
  /classes:
    get:
      tags:
        - Class
      summary: Find all Class
      description: This end point will serve all list of class
      operationId: getAllClass
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Classes'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Internal_Error'
  /classes/{classID}:
    get:
      tags:
        - Class
      summary: Find detail class by ID
      description: This end point will serve data of detailed class
      operationId: getDetailClass
      parameters:
        - name: classID
          in: path
          description: ID of class to fetch
          required: true
          schema:
            $ref: '#/components/schemas/ParamsID'

      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Class'
                  - $ref: '#/components/schemas/ClassID'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Internal_Error'
components:
  schemas:
    ParamsID:
      type: string
      format: uuid
      example: "0033d087-4a4c-4828-a987-e6e0c72d37e9"
    Ping:
      type: object
      properties :
        status:
          type: string
          example: OK
        message:
          type: string
          example: Ping succesfully
    Category:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: 0033d087-4a4c-4828-a987-e6e0c72d37e9
        name:
          type: string
          example: UI/UX Design
        image:
          type: string
          example: https://www.image.com
    Categories:
      type: object
      properties:
        status: 
          type: string
          example: OK
        message: 
          type: string
          example: Success
        data:
          type: array
          items: 
            $ref: '#/components/schemas/Category'
    CategoryName:
      type: object
      properties: 
        name:
          type: string
          example: UI/UX Design
    ClassID:
      type: object
      properties:
        description:
          type: string
          example: Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat
        classTarget:
          type: array
          items :
            type : string
          example : ["Lorem ipsum dolor sit amet, consectetur adipiscing elit","Lorem ipsum dolor sit amet, consectetur adipiscing elit","Lorem ipsum dolor sit amet, consectetur adipiscing elit"]
        telegram:
          type: string
          example: telegram.co.id
        onboarding:
          type: string
          example: Lorem ipsum dolor sit amet, consectetur adipiscing elit
    Class:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: 0033d087-4a4c-4828-a987-e6e0c72d37e9
        name:
          type: string
          example: UI/UX Design
        image:
          type: string
          example: https://www.image.com
        author:
          type: string
          example: nameexample
        price:
          type: number
          example: 280000
        level:
          type: string
          example: Advanced
        rating: 
          type: number
          example: 4.9
        is_premium:
          type: boolean
          example: true
        code:
          type: string
          example: UIUX0123
        category:
            $ref: '#/components/schemas/CategoryName'
    Classes:
      type: object
      properties:
        status: 
          type: string
          example: OK
        message: 
          type: string
          example: Success
        data:
          type: array
          items: 
            $ref: '#/components/schemas/Class'
    Unauthorized:
      type: object
      properties :
        status:
          type: string
          example: FAILED
        message:
          type: string
          example: Please login first
    Internal_Error:
      type: object
      properties:
        status:
          type: string
          example: FAILED
        error : 
          type : string
          example : Internal Server Error
    
      